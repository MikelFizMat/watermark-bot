from aiogram import Router, F, Bot
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, BufferedInputFile
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from utils.photo_handler import add_watermark
from src.settings import MENU

router = Router()


class FSMStates(StatesGroup):
    watermark_text = State()
    watermark_photo = State()
    nothing = State()


@router.message(Command("start"))
async def start(message: Message):
    await message.answer(
        f"üß° –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å, {message.from_user.first_name}, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Å—Ç—Ä–æ –Ω–∞–∫–ª–µ–∏—Ç—å –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ –Ω–∞ –ª—é–±–æ–µ —Ñ–æ—Ç–æ",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=MENU))


@router.callback_query(F.data == "watermark")
async def watermark_handler(callback: CallbackQuery, state: FSMContext):
    await state.set_state(FSMStates.watermark_text)
    await callback.message.answer(text="üí´–≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞ –≤–æ—Ç–µ—Ä–º–∞—Ä–∫–µ:")


@router.message(FSMStates.watermark_text)
async def watermark_get_text(message: Message, state: FSMContext):
    if message.text:
        await state.update_data(watermark_text=message.text)
        await state.set_state(FSMStates.watermark_photo)
        await message.answer("üí´–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    else:
        await message.answer("üí•–ü–æ–∫–∞ —ç—Ç–æ—Ç –±–æ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–∞–ª–æ–∂–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫, –≤—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–æ–º:")


@router.message(FSMStates.watermark_photo)
async def watermark_get_photo(message: Message, bot: Bot, state: FSMContext):
    keyboard = MENU
    keyboard[0] = [InlineKeyboardButton(text="–ù–æ–≤–∞—è –≤–æ—Ç–µ—Ä–º–∞—Ä–∫–∞ üìù", callback_data="watermark")]
    if message.photo:
        photo = message.photo[-1]
        file = await bot.get_file(photo.file_id)
        photo_data = await bot.download_file(file.file_path)
        data = await state.get_data()
        watermarked_photo_bytes = add_watermark(photo_data, data.get("watermark_text"))
        await message.answer_photo(BufferedInputFile(watermarked_photo_bytes.read(), filename="watermarked.jpg"),
                                   reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard))
        await state.set_state(FSMStates.nothing)
    else:
        await message.answer("üí•–í–≤–µ–¥–∏—Ç–µ —Ñ–æ—Ç–æ")


@router.callback_query(F.data == "about")
async def about(callback: CallbackQuery):
    await callback.message.answer(f"–≠—Ç–æ —á—Ç–æ-—Ç–æ —Ç–∏–ø–∞ pet –ø—Ä–æ–µ–∫—Ç–∞, –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –¥–ª—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ.\n"
                                  f"–ü—Ä–æ–µ–∫—Ç –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ python –±–ª–∞–≥–æ–¥–∞—Ä—è aiogram –∏ pillow\n"
                                  f"–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ github",
                                  reply_markup=InlineKeyboardMarkup(inline_keyboard=MENU))
